{ "resources": [

    { "name": "glilem-vabamorf-disambiguator_hf_2024-09-26", "aliases": ["glilem", "glilem_vabamorf_disambiguator", "lemmatizer", "morph_disambiguator"],
      "desc": "Model for GliLemTagger. GliLem can be used to disambiguate Vabamorf's output and enhance Vabamorf's analysis. The model has been created by Aleksei Dorkin and Kairit Sirts and introduced in the paper: https://arxiv.org/abs/2412.20597 ",
      "license": "apache-2.0",
      "size": 1.1,
      "url": "https://huggingface.co/tartuNLP/glilem-vabamorf-disambiguator", "hf_revision": "a250527", 
      "unpack_target_path": "glilem_vabamorf_disambiguator_hf_2024-09-26/"
    },

    { "name": "bert_morph_from_tartunlp_hf_2025-01-03", "aliases": ["bertmorph", "bert_morph", "bertmorphtagging", "bert_morph_tagging", "bertmorphv2", "bert_morph_v2"],
      "desc": "Est-RoBERTa-based model finetuned for tagging Vabamorf format partofpseech and morphological features on Estonian words. This is version 2 of the model, which has been: 1) fine-tuned to mimic automatic tagging behaviour of the Vabamorf morphological analyser and disambiguator, 2) fine-tuned on gold standard morphological annotations of Estonian Dependency Treebank (EDT). Model has been created by Sander Saska and its finetuning and evaluation scripts are available here: https://github.com/estnltk/estnltk-model-training/tree/main/morph_tagging ",
      "license": "CC BY-SA 4.0",
      "size": 0.474,
      "url": "https://huggingface.co/tartuNLP/est-roberta-vm-morph-tagging", "hf_revision": "a5c17c0", 
      "unpack_target_path": "estroberta/morph_from_tartunlp_hf_2025-01-03/"
    },

    { "name": "propbank_preannotator_2024-10-28", "aliases": ["propbank", "propbank_preannotator", "propbankpreannotator"], 
      "desc": "Preliminary lexicon for annotating Propbank style semantic roles with PropBankPreannotator. Automatically derived from resources of the project EKTB75, based on the resources version 2024-10-28.", 
      "license": "CC BY-SA 3.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/propbank_preannotator_2024-10-28.zip", 
      "size": 0.000024, 
      "md5": "3fef167096aa26a6439811036f05f01d", 
      "unpack_target_path": "propbank_preannotator/resources_2024-10-28/" 
    },

    { "name": "bert_morph_from_tartunlp_hf_2024-09-17", "aliases": ["bertmorph", "bert_morph", "bertmorphtagging", "bert_morph_tagging", "bertmorphv1", "bert_morph_v1"],
      "desc": "Est-RoBERTa-based model finetuned for tagging Vabamorf format partofpseech and morphological features on Estonian words. This version of the model has been fine-tuned to mimic automatic tagging behaviour of the Vabamorf morphological analyser and disambiguator. Model has been created by Sander Saska and its finetuning and evaluation scripts are available here: https://github.com/estnltk/estnltk-model-training/tree/main/morph_tagging ",
      "license": "CC BY-SA 4.0",
      "size": 0.474,
      "url": "https://huggingface.co/tartuNLP/est-roberta-vm-morph-tagging", "hf_revision": "b36e4e9", 
      "unpack_target_path": "estroberta/morph_from_tartunlp_hf_2024-09-17/"
    },

    { "name": "estwordnet_2023-07-20", "aliases": ["wordnet", "estwn"], 
      "desc": "Database files for Estonian Wordnet API. This resource is based on Estonian Wordnet version 2.6.0. The original source for creating the database files: https://github.com/estnltk/estnltk-model-training/blob/main/wordnet/data_extraction.ipynb", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/wordnet_2023-07-20.zip", 
      "size": 0.026, 
      "md5": "1f20312fa04c0466950910acf966aa7e", 
      "unpack_target_path": "wordnet/estwn-et-2.6.0_2023-07-20/" 
    },

    { "name": "stanza_syntax_2023-01-21", "aliases": ["stanza_syntax", "stanza", "stanzasyntax", "stanzasyntaxtagger", "stanzasyntaxensemble", "stanzasyntaxensembletagger"], 
      "desc": "Models for StanzaSyntax(Ensemble)Tagger. StanzaSyntaxTagger operates in three modes: a) syntax prediction based on sentences, b) syntax prediction using morphological features generated by Vabamorf, c) syntax prediction using extended morphological features. Models for StanzaSyntaxEnsembleTagger are trained on extended morphological features. Corresponding models were trained by Siim Orasmaa on Estonian Dependency Treebank v2.6 with UD syntax annotations. For completeness, the package also includes original Stanford models: -directories pretrain, lemma, pos, tokenize -depparse/stanza_depparse.pt", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/stanza_syntax_2023-01-21.zip", 
      "size": 1.5, 
      "md5": "2bd6f2fb38e48307a62fe12b5d4bfd35", 
      "unpack_target_path": "stanza_syntax/models_2023-01-21/" 
    },

    { "name": "coreference_2021-01-04", "aliases": ["coreference", "pronomial_coreference", "coreference_v1"], 
      "desc": "Model for CoreferenceRelationTagger. This model was created by Eduard Barbu for the EstonianCoreferenceSystem (v1.0.0), which detects pronoun-reference relations in text. The model includes a word2vec model created by Alexander Tkachenko that is required for preprocessing. The original source of the model: https://github.com/SoimulPatriei/EstonianCoreferenceSystem/tree/7883ac24002fb715d43d9d149ee0340339aeda67", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/coreference_model_2021-01-04.zip", 
      "size": 0.19, 
      "md5": "532b8fea180a84152d613d3e7a68b963", 
      "unpack_target_path": "coreference/model_2021-01-04/" 
    },

    { "name": "stanza_syntax_2021-05-29", "aliases": ["stanza_syntax", "stanza", "stanzasyntax", "stanzasyntaxtagger", "stanzasyntaxensemble", "stanzasyntaxensembletagger"], 
      "desc": "Models for StanzaSyntaxTagger and StanzaSyntaxEnsembleTagger. StanzaSyntaxTagger operates in three modes: - syntax prediction based on sentences - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. Models for StanzaSyntaxEnsembleTagger are trained using extended morphological features. Corresponding models were trained by Sandra Eiche on Estonian Dependency Treebank with UD syntax annotations. Dependency parsing models and the directory 'ensemble_models' must be located in the root directory defining StanzaSyntaxTagger under the subdirectory stanza_resources/et/depparse. Pretrain model under the subdirectory stanza_resources/et/pretrain. For completeness, the file also includes original Stanford models: - directories pretrain, lemma, pos, tokenize - depparse/stanza_depparse.pt", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/stanza_syntax_2021-05-29.zip", 
      "size": 1.4,
      "md5": "4dc568d78f613b1357bba33ab084cf81",
      "unpack_target_path": "stanza_syntax/models_2021-05-29/"
    },

    { "name": "stanza_syntax_2020-11-30", "aliases": ["stanza_syntax", "stanza", "stanzasyntax", "stanzasyntaxtagger"], 
      "desc": "Models for StanzaSyntaxTagger. StanzaSyntaxTagger operates in three modes: - syntax prediction based on sentences - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. Corresponding models were trained by Sandra Eiche on Estonian Dependency Treebank with UD syntax annotations. Pretrain model under the subdirectory stanza_resources/et/pretrain. For completeness, the file also includes original Stanford models: - directories pretrain, lemma, pos, tokenize - depparse/stanza_depparse.pt", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/stanza_syntax_2020-11-30.zip", 
      "size": 0.470,
      "md5": "cf0dcfe4a9e3ceb9b462a46e1b902010",
      "unpack_target_path": "stanza_syntax/models_2020-11-30/"
    },

    { "name": "maltparser_syntax_2021-05-29", "aliases": ["maltparser_syntax", "maltparser", "maltparsersyntax", "maltparsertagger"], 
      "desc": "Models for MaltparserTagger. MaltparserTagger operates in three modes: - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. - syntax prediction using extended morphological features processed with VISLCG3 Pipeline. For the first two modes two types of dependency relations can be chosen from - UD or CG. Last mode can only be used for CG-type output. Corresponding models were trained by Claudia Kittask on Estonian Dependency Treebank. Dependency parsing models must be located in the root directory defining MaltparserTagger under the subdirectory java-res/maltparser.", 
      "license": "CC BY-SA 4.0 + https://www.maltparser.org/license.html", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/maltparser_syntax_2021-05-29.zip", 
      "size": 0.128,
      "md5": "608e39b1a591316cd1f4c889c57bb03c",
      "unpack_target_path": "maltparser_syntax/models_2021-05-29/"
    },

    { "name": "udpipe_syntax_2021-05-29", "aliases": ["udpipe_syntax", "udpipe", "udpipesyntax", "udpipetagger"], 
      "desc": "Models for UDPipeTagger. UDPipeTagger operates in three modes: - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. - syntax prediction using extended morphological features processed with VISLCG3 Pipeline. For all modes two types of dependency relations can be chosen from - UD or CG. Corresponding models were trained by Claudia Kittask on Estonian Dependency Treebank.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/udpipe_syntax_2021-05-29.zip", 
      "size": 0.039,
      "md5": "61a2674aa3569a8e83d7378cd917d54d",
      "unpack_target_path": "udpipe_syntax/models_2021-05-29/"
    },

    { "name": "estwordnet_2020-06-30", "aliases": ["wordnet", "estwn"], 
      "desc": "Database files of Estonian Wordnet version 2.3.2. This resource was created by Birgit Sõrmus via XML wordnet conversion utilities from: https://github.com/estnltk/estnltk/blob/version_1.6/estnltk/wordnet/data_import/data_extract.ipynb", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/wordnet_2020-06-30.zip", 
      "size": 0.022, 
      "md5": "5f093071dbb5748eaa9ec18083048bac", 
      "unpack_target_path": "wordnet/estwn-et-2.3.2_2020-06-30/" 
    },

    { "name": "neural_morph_softmax_emb_cat_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neural_morph_tagger", "neuralmorphdisamb", "neuralmorphtagger", "softmaxembcatsumtagger"], 
      "desc": "Model for SoftmaxEmbCatSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/neural_morph_softmax_emb_cat_sum_2019-08-23.zip", 
      "size": 0.355,
      "md5": "535cbd41178797e7eb58cd1c9ccc12d5",
      "unpack_source_path": "neural_morph_disamb/softmax_emb_cat_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/softmax_emb_cat_sum_2019-08-23/"
    },

    { "name": "neural_morph_softmax_emb_tag_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "softmaxembtagsumtagger"],
      "desc": "Model for SoftmaxEmbTagSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/neural_morph_softmax_emb_tag_sum_2019-08-23.zip", 
      "size": 0.354,
      "md5": "40e922a826678c8fdbdfc4d49d7745e7",
      "unpack_source_path": "neural_morph_disamb/softmax_emb_tag_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/softmax_emb_tag_sum_2019-08-23/"
    },
    
    { "name": "neural_morph_seq2seq_emb_cat_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "seq2seqembcatsumtagger"],
      "desc": "Model for Seq2SeqEmbCatSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/neural_morph_seq2seq_emb_cat_sum_2019-08-23.zip", 
      "size": 0.366,
      "md5": "b9b9b7b0574c7618cc774d2a0f65cb1b",
      "unpack_source_path": "neural_morph_disamb/seq2seq_emb_cat_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/seq2seq_emb_cat_sum_2019-08-23/"
    },
    
    { "name": "neural_morph_seq2seq_emb_tag_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "seq2seqembtagsumtagger"],
      "desc": "Model for Seq2SeqEmbTagSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/neural_morph_seq2seq_emb_tag_sum_2019-08-23.zip",
      "size": 0.365,
      "md5": "2fc8a65a68170d50bb40d747e3f53e38",
      "unpack_source_path": "neural_morph_disamb/seq2seq_emb_tag_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/seq2seq_emb_tag_sum_2019-08-23/"
    },
    
    { "name": "hfst_analyser_2019-03-22", "aliases": ["hfst_morph", "hfst", "hfstmorph", "hfstmorphanalyser"],
      "desc": "Model for HfstClMorphAnalyser. Produces ambiguous morphological analyses with HFST tools. The source of the model was obtained from a legacy repository: https://victorio.uit.no/langtech/trunk/experiment-langs/est/?p=177977 (revision 177977 from 2019-03-22). The repository has been relocated to here: https://github.com/giellalt/lang-est-x-utee .", 
      "license": "CC BY-SA 4.0 + LGPL 3.0", 
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/hfst_analyser_2019-03-22.zip", 
      "size": 0.012,
      "md5": "53cfeb677868d819a6fd2bf0f8efd928",
      "unpack_source_path": "hfst/analyser_2019-03-22/",
      "unpack_target_path": "hfst/analyser_2019-03-22/"
    },

    { "name": "estbert_from_tartunlp_hf_2022-03-10", "aliases": ["estbert", "berttagger", "berttransformer", "bert"], 
      "desc": "Model for BertTagger and BertTransformer. BertTagger outputs token or word level embeddings. BertTransformer outputs sentence and word level embeddings. The original EstBERT model was trained on Estonian National Corpus 2017 by Hasan Tanvir, Claudia Kittask, Kairit Sirts. This version of the model is from huggingface tartuNLP/EstBERT commit e97f62c. More info: https://huggingface.co/tartuNLP/EstBERT", 
      "license": "CC BY 4.0", 
      "size": 2.4,
      "url": "https://huggingface.co/tartuNLP/EstBERT", "hf_revision": "e97f62c",
      "unpack_target_path": "estbert/model_hf_tartunlp_2022-03-10/"
    },
    
    { "name": "estbertner_from_tartunlp_hf_2022-05-06", "aliases": ["estbertner", "estbertner_v1"],
      "desc": "EstBERT_NER is a fine-tuned EstBERT model that can be used for Named Entity Recognition. This model can recognize 3 types of entities: locations (LOC), organizations (ORG) and persons (PER).",
      "license": "CC BY 4.0",
      "size": 1.98,
      "url": "https://huggingface.co/tartuNLP/EstBERT_NER", "hf_revision": "fc6f195",
      "unpack_target_path": "estbert/ner_model_hf_tartunlp_2022-05-06/"
    },

    { "name": "estbertner_v2_from_tartunlp_hf_2022-12-12", "aliases": ["estbertner_v2"],
      "desc": "EstBERT_NER_v2 is a fine-tuned EstBERT model that can be used for Named Entity Recognition. This model can recognize 11 types of entities: persons (PER), locations (LOC), organizations (ORG), geopolitical entities (GPE), monetary values (MONEY), percentages (PERCENT), product names (PROD), titles (TITLE), dates (DATE), times (TIME) and event names (EVENT).",
      "license": "CC BY 4.0",
      "size": 0.5,
      "url": "https://huggingface.co/tartuNLP/EstBERT_NER_v2", "hf_revision": "fe2a101",
      "unpack_target_path": "estbert/ner_model_v2_hf_tartunlp_2022-12-12/"
    },
    
    { "name": "estbert_2020-10-20", "aliases": ["estbert", "berttagger", "berttransformer", "bert"], 
      "desc": "Model for BertTagger and BertTransformer. BertTagger outputs token or word level embeddings. BertTransformer outputs sentence and word level embeddings. Corresponding EstBERT model was trained on Estonian National Corpus 2017 by Hasan Tanvir, Claudia Kittask, Kairit Sirts. When appropriate cite the article: EstBERT: A Pretrained Language-Specific BERT for Estonian https://arxiv.org/abs/2011.04784", 
      "license": "CC BY 4.0", 
      "size": 0.476,
      "md5": "764a6960f2aff5a23856bd2686f33098",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/estbert_2020-10-20.zip",
      "unpack_target_path": "estbert/model_2020-10-20/"
    },

    { "name": "word2vec_lemmas_cbow_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.174,
      "md5": "d4acdc861f0235d90fd976deb5fd4039",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_lemmas.cbow.s100.w2v.bin.2015-06-21.gz", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.cbow.s100.w2v.bin"
    },

    { "name": "word2vec_lemmas_cbow_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.342,
      "md5": "287767879d9a7898fc7c418abfcf1ac0",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_lemmas.cbow.s200.w2v.bin.2015-06-21.gz", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.cbow.s200.w2v.bin"
    },

    { "name": "word2vec_lemmas_sg_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.174,
      "md5": "cd092d37ebd99f52709896d8847cbe81",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_lemmas.sg.s100.w2v.bin.2015-06-21.gz",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.sg.s100.w2v.bin"
    },

    { "name": "word2vec_lemmas_sg_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.342,
      "md5": "8531964344f6e4554019b7ed43b5cfa4",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_lemmas.sg.s200.w2v.bin.2015-06-21.gz",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.sg.s200.w2v.bin"
    },

    { "name": "word2vec_words_cbow_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.322,
      "md5": "a5fba372ae44111f713299a0b6da802b",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_words.cbow.s100.w2v.bin.2015-06-21.gz", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.cbow.s100.w2v.bin"
    },

    { "name": "word2vec_words_cbow_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.633,
      "md5": "a1b76cb4d6162d0f9c4b6a3ce225f04e",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_words.cbow.s200.w2v.bin.2015-06-21.gz", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.cbow.s200.w2v.bin"
    },

    { "name": "word2vec_words_sg_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.322,
      "md5": "c2281ae3a42f9773ec815a1d90f7d860",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_words.sg.s100.w2v.bin.2015-06-21.gz",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.sg.s100.w2v.bin"
    },

    { "name": "word2vec_words_sg_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.633,
      "md5": "eb4d84e9c9d8d6ab8a8f163e62297b62",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/word2vec_words.sg.s200.w2v.bin.2015-06-21.gz",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.sg.s200.w2v.bin"
    },

    { "name": "collocation_net_2022-06-07", "aliases": ["collocation_net", "collocationnet"], 
      "desc": "Files needed to use CollocationNet. Files include embeddings obtained from training Latent Dirichlet Allocation (LDA) models on different collocation types and example sentences.", 
      "license": "CC BY-SA 4.0", 
      "size": 2.81,
      "md5": "7f7b6b1a81b05c87ee2ddc060ec6a4ea",
      "url": "https://s3.hpc.ut.ee/estnltk/estnltk_resources/collocation_net_2022-06-07.zip",
      "unpack_target_path": "collocation_net/model_2022-06-07/"
    }

  ]
}
