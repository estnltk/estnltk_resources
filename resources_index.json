{ "resources": [

    { "name": "stanza_syntax_2021-05-29", "aliases": ["stanza_syntax", "stanza", "stanzasyntax", "stanzasyntaxtagger", "stanzasyntaxensemble", "stanzasyntaxensembletagger"], 
      "desc": "Models for StanzaSyntaxTagger and StanzaSyntaxEnsembleTagger. StanzaSyntaxTagger operates in three modes: - syntax prediction based on sentences - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. Models for StanzaSyntaxEnsembleTagger are trained using extended morphological features. Corresponding models were trained by Sandra Eiche on Estonian Dependency Treebank with UD syntax annotations. Dependency parsing models and the directory 'ensemble_models' must be located in the root directory defining StanzaSyntaxTagger under the subdirectory stanza_resources/et/depparse. Pretrain model under the subdirectory stanza_resources/et/pretrain. For completeness, the file also includes original Stanford models: - directories pretrain, lemma, pos, tokenize - depparse/stanza_depparse.pt", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24897", 
      "size": 1.4,
      "md5": "4dc568d78f613b1357bba33ab084cf81",
      "unpack_target_path": "stanza_syntax/models_2021-05-29/"
    },

    { "name": "stanza_syntax_2020-11-30", "aliases": ["stanza_syntax", "stanza", "stanzasyntax", "stanzasyntaxtagger"], 
      "desc": "Models for StanzaSyntaxTagger. StanzaSyntaxTagger operates in three modes: - syntax prediction based on sentences - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. Corresponding models were trained by Sandra Eiche on Estonian Dependency Treebank with UD syntax annotations. Pretrain model under the subdirectory stanza_resources/et/pretrain. For completeness, the file also includes original Stanford models: - directories pretrain, lemma, pos, tokenize - depparse/stanza_depparse.pt", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24900", 
      "size": 0.470,
      "md5": "cf0dcfe4a9e3ceb9b462a46e1b902010",
      "unpack_target_path": "stanza_syntax/models_2020-11-30/"
    },

    { "name": "maltparser_syntax_2021-05-29", "aliases": ["maltparser_syntax", "maltparser", "maltparsersyntax", "maltparsertagger"], 
      "desc": "Models for MaltparserTagger. MaltparserTagger operates in three modes: - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. - syntax prediction using extended morphological features processed with VISLCG3 Pipeline. For the first two modes two types of dependency relations can be chosen from - UD or CG. Last mode can only be used for CG-type output. Corresponding models were trained by Claudia Kittask on Estonian Dependency Treebank. Dependency parsing models must be located in the root directory defining MaltparserTagger under the subdirectory java-res/maltparser.", 
      "license": "CC BY-SA 4.0 + https://www.maltparser.org/license.html", 
      "url": "https://entu.keeleressursid.ee/api2/file-24903", 
      "size": 0.128,
      "md5": "608e39b1a591316cd1f4c889c57bb03c",
      "unpack_target_path": "maltparser_syntax/models_2021-05-29/"
    },

    { "name": "udpipe_syntax_2021-05-29", "aliases": ["udpipe_syntax", "udpipe", "udpipesyntax", "udpipetagger"], 
      "desc": "Models for UDPipeTagger. UDPipeTagger operates in three modes: - syntax prediction using morphological features generated by Vabamorf - syntax prediction using extended morphological features. - syntax prediction using extended morphological features processed with VISLCG3 Pipeline. For all modes two types of dependency relations can be chosen from - UD or CG. Corresponding models were trained by Claudia Kittask on Estonian Dependency Treebank.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24906", 
      "size": 0.039,
      "md5": "61a2674aa3569a8e83d7378cd917d54d",
      "unpack_target_path": "udpipe_syntax/models_2021-05-29/"
    },

    { "name": "neural_morph_softmax_emb_cat_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neural_morph_tagger", "neuralmorphdisamb", "neuralmorphtagger", "softmaxembcatsumtagger"], 
      "desc": "Model for SoftmaxEmbCatSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24912", 
      "size": 0.355,
      "md5": "535cbd41178797e7eb58cd1c9ccc12d5",
      "unpack_source_path": "neural_morph_disamb/softmax_emb_cat_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/softmax_emb_cat_sum_2019-08-23/"
    },

    { "name": "neural_morph_softmax_emb_tag_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "softmaxembtagsumtagger"],
      "desc": "Model for SoftmaxEmbTagSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24915", 
      "size": 0.354,
      "md5": "40e922a826678c8fdbdfc4d49d7745e7",
      "unpack_source_path": "neural_morph_disamb/softmax_emb_tag_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/softmax_emb_tag_sum_2019-08-23/"
    },
    
    { "name": "neural_morph_seq2seq_emb_cat_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "seq2seqembcatsumtagger"],
      "desc": "Model for Seq2SeqEmbCatSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24918", 
      "size": 0.366,
      "md5": "b9b9b7b0574c7618cc774d2a0f65cb1b",
      "unpack_source_path": "neural_morph_disamb/seq2seq_emb_cat_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/seq2seq_emb_cat_sum_2019-08-23/"
    },
    
    { "name": "neural_morph_seq2seq_emb_tag_sum_2019-08-23", "aliases": ["neural_morph", "neural_morph_disamb", "neuralmorphdisamb", "seq2seqembtagsumtagger"],
      "desc": "Model for Seq2SeqEmbTagSumTagger (NeuralMorphTagger). All neural morphological disambiguation models were trained by Kermo Saarse and Kairit Sirts in June-August 2018 using High Performance Cluster in University of Tartu. Specific requirements: Python 3.7, tensorflow version < 2.0, such as 1.15.5.", 
      "license": "CC BY-SA 4.0", 
      "url": "https://entu.keeleressursid.ee/api2/file-24921",
      "size": 0.365,
      "md5": "2fc8a65a68170d50bb40d747e3f53e38",
      "unpack_source_path": "neural_morph_disamb/seq2seq_emb_tag_sum_23-08-2019/",
      "unpack_target_path": "neural_morph_disamb/seq2seq_emb_tag_sum_2019-08-23/"
    },

    { "name": "estbert_from_tartunlp_hf_2022-03-10", "aliases": ["estbert", "berttagger", "berttransformer", "bert"], 
      "desc": "Model for BertTagger and BertTransformer. BertTagger outputs token or word level embeddings. BertTransformer outputs sentence and word level embeddings. The original EstBERT model was trained on Estonian National Corpus 2017 by Hasan Tanvir, Claudia Kittask, Kairit Sirts. This version of the model is from huggingface tartuNLP/EstBERT commit e97f62c. More info: https://huggingface.co/tartuNLP/EstBERT", 
      "license": "CC BY 4.0", 
      "size": 2.4,
      "url": "https://huggingface.co/tartuNLP/EstBERT", "hf_revision": "e97f62c",
      "unpack_target_path": "estbert/model_hf_tartunlp_2022-03-10/"
    },
    
    { "name": "estbert_2020-10-20", "aliases": ["estbert", "berttagger", "berttransformer", "bert"], 
      "desc": "Model for BertTagger and BertTransformer. BertTagger outputs token or word level embeddings. BertTransformer outputs sentence and word level embeddings. Corresponding EstBERT model was trained on Estonian National Corpus 2017 by Hasan Tanvir, Claudia Kittask, Kairit Sirts. When appropriate cite the article: EstBERT: A Pretrained Language-Specific BERT for Estonian https://arxiv.org/abs/2011.04784", 
      "license": "CC BY 4.0", 
      "size": 0.476,
      "md5": "764a6960f2aff5a23856bd2686f33098",
      "url": "https://entu.keeleressursid.ee/api2/file-24909",
      "unpack_target_path": "estbert/model_2020-10-20/"
    },

    { "name": "word2vec_lemmas_cbow_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.174,
      "md5": "d4acdc861f0235d90fd976deb5fd4039",
      "url": "https://entu.keeleressursid.ee/api2/file-23851", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.cbow.s100.w2v.bin"
    },

    { "name": "word2vec_lemmas_cbow_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.342,
      "md5": "287767879d9a7898fc7c418abfcf1ac0",
      "url": "https://entu.keeleressursid.ee/api2/file-23857", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.cbow.s200.w2v.bin"
    },

    { "name": "word2vec_lemmas_sg_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.174,
      "md5": "cd092d37ebd99f52709896d8847cbe81",
      "url": "https://entu.keeleressursid.ee/api2/file-23872",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.sg.s100.w2v.bin"
    },

    { "name": "word2vec_lemmas_sg_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec lemma-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.342,
      "md5": "8531964344f6e4554019b7ed43b5cfa4",
      "url": "https://entu.keeleressursid.ee/api2/file-23869",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/lemmas.sg.s200.w2v.bin"
    },

    { "name": "word2vec_words_cbow_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.322,
      "md5": "a5fba372ae44111f713299a0b6da802b",
      "url": "https://entu.keeleressursid.ee/api2/file-23875", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.cbow.s100.w2v.bin"
    },

    { "name": "word2vec_words_cbow_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_cbow"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.633,
      "md5": "a1b76cb4d6162d0f9c4b6a3ce225f04e",
      "url": "https://entu.keeleressursid.ee/api2/file-23881", 
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.cbow.s200.w2v.bin"
    },

    { "name": "word2vec_words_sg_s100_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.322,
      "md5": "c2281ae3a42f9773ec815a1d90f7d860",
      "url": "https://entu.keeleressursid.ee/api2/file-23887",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.sg.s100.w2v.bin"
    },

    { "name": "word2vec_words_sg_s200_2015-06-21", "aliases": ["word2vec", "word_embeddings", "word2vec_sg"], 
      "desc": "word2vec word-based embeddings model created by Alexander Tkachenko. More info: https://github.com/estnltk/word2vec-models", 
      "license": "CC BY-SA 4.0", 
      "size": 0.633,
      "md5": "eb4d84e9c9d8d6ab8a8f163e62297b62",
      "url": "https://entu.keeleressursid.ee/api2/file-23896",
      "unpack_target_path": "word2vec/embeddings_2015-06-21/words.sg.s200.w2v.bin"
    }

  ]
}